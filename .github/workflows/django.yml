name: Django app CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.12
      uses: actions/setup-python@v2
      with:
        python-version: "3.12"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pipenv && pipenv install --system --dev
    
    - name: Run formatter
      run: |
        black --check .
    
    - name: Run linter
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --max-complexity=10 --statistics
    
    - name: Run tests
      run: |
        pytest

  check-secrets:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Check if secrets exist
        run: |
          if [ -z "${{ secrets.AWS_HOST_USER }}" ]; then
            echo "Error: AWS_HOST_USER secret is not set."
            exit 1
          fi
          if [ -z "${{ secrets.AWS_EC2_IP_ADDRESS }}" ]; then
            echo "Error: AWS_EC2_IP_ADDRESS secret is not set."
            exit 1
          fi
          if [ -z "${{ secrets.EC2_SSH_KEY }}" ]; then
            echo "Error: EC2_SSH_KEY secret is not set."
            exit 1
          fi
          echo "All required secrets are set."

  deploy:
    runs-on: ubuntu-latest
    needs: check-secrets

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create SSH key file
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          echo "${EC2_SSH_KEY}" > ec2_key.pem
          chmod 600 ec2_key.pem

      - name: Run Deployment Script
        env:
          AWS_HOST_USER: ${{ secrets.AWS_HOST_USER }}
          AWS_EC2_IP_ADDRESS: ${{ secrets.AWS_EC2_IP_ADDRESS }}
          REPO_NAME: ${{ github.event.repository.name }}
          DRY_RUN : false
        run: |
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem $AWS_HOST_USER@$AWS_EC2_IP_ADDRESS 'bash -s' < deploy_script.sh $DRY_RUN $REPO_NAME $AWS_HOST_USER

      - name: Clean up SSH key file
        run: |
          rm ec2_key.pem
